{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/components/index.js","webpack:///./src/App.vue?e166","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/McFontpicker.vue?6ca8","webpack:///src/components/McFontpicker.vue","webpack:///./src/components/McFontpicker.vue?cee8","webpack:///./src/components/McFontpicker.vue","webpack:///./src/components/McFontpicker.vue?8b6f"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","install","Vue","installed","component","McFontpicker","plugin","GlobalVue","global","vue","use","_vm","this","_h","$createElement","_c","_self","attrs","_v","_m","staticClass","model","callback","$$v","font1","expression","style","_s","pre","on","fontVariants","ref","font2","manuallyLoadFonts1","staticStyle","$event","font3","thinnestFont","v","font","variants","fontFamily","fontWeight","weight","_e","manuallyLoadFonts2","italic","manuallyAddFontValue","staticRenderFns","components","config","productionTip","render","h","App","$mount","loaderOnly","class","outerClasses","domProps","searchContent","searchChanged","onFocus","hide","onKeyDown","previewClasses","popoutClasses","cancelBlur","_l","sane","selectedFontIndex","e","onClick","matchingFonts","noMatches","props","type","String","default","autoLoad","Boolean","loadAllVariants","loadFonts","Array","googleFonts","localFonts","focused","allGoogleFonts","typedSearch","current","watch","handleNewValue","newValue","handleLoadFont","computed","ret","fonts","activeFonts","cased","toLowerCase","map","filter","mounted","ifonts","methods","preventDefault","setCurrentByName","fontNames","loadFontByName","$refs","scrollTop","target","isLonger","matches","firstMatch","setInputSelection","input","setSelectionRange","startPos","endPos","range","createTextRange","collapse","moveEnd","moveStart","select","setCurrent","preciseMatches","showSelectedFont","why","fontTop","popTop","show","setTimeout","getFontByName","trim","$emit","blur","autoLoadFont","emitFontVariants","substring","loadFontFromObject","console","error","origFont","getFourVariants","fourFonts","regular","regularWeights","bold","italicWeights","boldItalic","cssId","cssIdAll","existing","existingAll","link","document","createElement","rel","id","href","getElementsByTagName","appendChild"],"mappings":"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","file":"js/app.d8a725c7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-fontpicker/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import McFontpicker from './McFontpicker.vue'\n\nfunction install(Vue) {\n  if (install.installed) return\n  install.installed = true\n  Vue.component('McFontpicker', McFontpicker)\n}\n\nconst plugin = {\n  install,\n}\n\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n\nMcFontpicker.install = install\n\nexport default McFontpicker\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"Simple google font picker\")]),_c('p',[_vm._v(\" This is a live demo showing how to use @mikk3lro/mc-fontpicker for Vue.js. \")]),_vm._m(0),_vm._m(1),_c('h3',{attrs:{\"id\":\"default\"}},[_vm._v(\"Default behaviour\")]),_vm._m(2),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{model:{value:(_vm.font1),callback:function ($$v) {_vm.font1=$$v},expression:\"font1\"}})],1),_c('p',[_vm._v(\" Current value: \"),_c('span',{style:('font-family: ' + _vm.font1)},[_vm._v(_vm._s(_vm.font1))])]),_c('pre',{pre:true},[_vm._v(\"<McFontpicker v-model=\\\"font1\\\" />\\nCurrent value: <span :style=\\\"'font-family: ' + font1\\\">{{ font1 }}</span>\\n\")]),_c('h3',{attrs:{\"id\":\"fontVariants\"}},[_vm._v(\"Font variants\")]),_vm._m(3),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"value\":\"Oranienbaum\"},on:{\"fontVariants\":function (i) { return (_vm.fontVariants = i); }}})],1),_c('p',[_vm._v(\"fontVariants:\")]),_c('pre',[_vm._v(_vm._s(_vm.fontVariants))]),_c('pre',{pre:true},[_vm._v(\"<McFontpicker @fontVariants=\\\"i => (fontVariants = i)\\\" />\\nfontVariants: <pre>{{ fontVariants }}</pre>\\n\")]),_c('h3',{attrs:{\"id\":\"nomatches\"}},[_vm._v(\"No matches\")]),_vm._m(4),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{ref:\"fontloader\",attrs:{\"no-matches\":\"I've got nothing\"}})],1),_c('pre',[_vm._v(\"<McFontpicker no-matches=\\\"I've got nothing\\\" />\")]),_c('h3',{attrs:{\"id\":\"autoload\"}},[_vm._v(\"Autoload fonts\")]),_vm._m(5),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"auto-load\":\"\"},model:{value:(_vm.font2),callback:function ($$v) {_vm.font2=$$v},expression:\"font2\"}})],1),_c('p',[_vm._v(\" Current value: \"),_c('span',{style:('font-family: ' + _vm.font2)},[_vm._v(_vm._s(_vm.font2))])]),_c('pre',{pre:true},[_vm._v(\"<McFontpicker auto-load v-model=\\\"font2\\\" />\\nCurrent value: <span :style=\\\"'font-family: ' + font2\\\">{{ font2 }}</span>\\n\")]),_c('h3',{attrs:{\"id\":\"manualload\"}},[_vm._v(\"Manually load fonts\")]),_vm._m(6),_c('p',[_vm._v(\"Several fonts may be loaded by comma-separating the names.\")]),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"load-fonts\":_vm.manuallyLoadFonts1}}),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('button',{on:{\"click\":function($event){_vm.manuallyLoadFonts1 = 'Rubik Beastly'}}},[_vm._v(\" Load \"),_c('span',{staticStyle:{\"font-family\":\"Rubik Beastly\"}},[_vm._v(\"\\\"Rubik Beastly\\\"\")])]),_c('button',{on:{\"click\":function($event){_vm.manuallyLoadFonts1 = 'Pacifico, Teko'}}},[_vm._v(\" Load \"),_c('span',{staticStyle:{\"font-family\":\"Pacifico\"}},[_vm._v(\"\\\"Pacifico\\\"\")]),_vm._v(\" and \"),_c('span',{staticStyle:{\"font-family\":\"Teko\"}},[_vm._v(\"\\\"Teko\\\"\")])])])],1),_c('pre',[_vm._v(\"<McFontpicker :load-fonts=\\\"manuallyLoadFonts1\\\" />\\n<button @click=\\\"manuallyLoadFonts1 = 'Rubik Beastly'\\\">One font</button>\\n<button @click=\\\"manuallyLoadFonts1 = 'Pacifico, Teko'\\\">Two fonts</button>\\n\")]),_c('h3',{attrs:{\"id\":\"loadallvariants\"}},[_vm._v(\"Load all variants\")]),_vm._m(7),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"auto-load\":\"\",\"load-all-variants\":\"\"},model:{value:(_vm.font3),callback:function ($$v) {_vm.font3=$$v},expression:\"font3\"}})],1),_c('p',[_vm._v(\" Current value: \"),_c('span',{style:('font-family: ' + _vm.font3)},[_vm._v(_vm._s(_vm.font3))])]),_c('pre',{pre:true},[_vm._v(\"<McFontpicker auto-load load-all-variants v-model=\\\"font3\\\" />\\nCurrent value: <span :style=\\\"'font-family: ' + font3\\\">{{ font3 }}</span>\\n\")]),_c('h3',{attrs:{\"id\":\"loadspecific\"}},[_vm._v(\"Load specific variants\")]),_vm._m(8),_c('pre',[_vm._v(\"[\\n  {\\n    font: \\\"Open Sans\\\",\\n    variants: [\\n      { italic: false, weight: 400 },\\n      { italic: true, weight: 400 },\\n      { italic: false, weight: 700 },\\n      { italic: true, weight: 700 },\\n    ]\\n  },\\n  {\\n    font: \\\"Rancho\\\",\\n    variants: [\\n      { italic: false, weight: 400 },\\n    ]\\n  }\\n]\")]),_vm._m(9),_c('p',[_vm._v(\" One use case could be loading only one variant - in this example whichever is first (least bold): \")]),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"load-fonts\":[_vm.thinnestFont]},on:{\"fontVariants\":function (v) { return (_vm.thinnestFont = {\n              font: v.font,\n              variants: v.variants.slice(0, 1),\n            }); }}})],1),(typeof _vm.thinnestFont == 'object')?_c('p',[_vm._v(\" Current value: \"),_c('span',{style:({\n          fontFamily: _vm.thinnestFont.font,\n          fontWeight: _vm.thinnestFont.variants[0].weight,\n        })},[_vm._v(\" \"+_vm._s(_vm.thinnestFont.font)+\" \")])]):_vm._e(),_c('pre',{pre:true},[_vm._v(\"<McFontpicker\\n  :load-fonts=\\\"[thinnestFont]\\\"\\n  @fontVariants=\\\"\\n    v => (thinnestFont = {\\n      font: v.font,\\n      variants: v.variants.slice(0, 1),\\n    })\\n  \\\"\\n/>\\nCurrent value:\\n<span\\n  :style=\\\"{\\n    fontFamily: thinnestFont.font,\\n    fontWeight: thinnestFont.variants[0].weight,\\n  }\\\"\\n>\\n  {{ thinnestFont.font }}\\n</span>\\n\")]),_c('h3',{attrs:{\"id\":\"loaderonly\"}},[_vm._v(\"Font loader only\")]),_vm._m(10),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"load-fonts\":_vm.manuallyLoadFonts2,\"loader-only\":\"\"}}),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('button',{on:{\"click\":function($event){_vm.manuallyLoadFonts1 = 'Rancho'}}},[_vm._v(\" Load \"),_c('span',{staticStyle:{\"font-family\":\"Rancho\"}},[_vm._v(\"\\\"Rancho\\\"\")])]),_c('button',{on:{\"click\":function($event){_vm.manuallyLoadFonts1 = 'Smooch, Risque'}}},[_vm._v(\" Load \"),_c('span',{staticStyle:{\"font-family\":\"Smooch\"}},[_vm._v(\"\\\"Smooch\\\"\")]),_vm._v(\" and \"),_c('span',{staticStyle:{\"font-family\":\"Risque\"}},[_vm._v(\"\\\"Risque\\\"\")])])])],1),_c('pre',[_vm._v(\"<McFontpicker :load-fonts=\\\"manuallyLoadFonts2\\\" loader-only />\\n<button @click=\\\"manuallyLoadFonts2 = 'Rancho'\\\">Rancho</button>\\n<button @click=\\\"manuallyLoadFonts2 = 'Smooch, Risque'\\\">Two fonts</button>\\n\")]),_c('h3',{attrs:{\"id\":\"choosegooglefonts\"}},[_vm._v(\"Choose google fonts\")]),_vm._m(11),_c('p',[_vm._v(\"You can supply font names as an array or as a comma-seperated string.\")]),_c('p',[_vm._v(\" Do note that the previews are crazy inefficient if you only use a few fonts - in that case you are probably better off recompiling all previews - which is beyond the scope of this document at the moment. \")]),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"google-fonts\":['Tinos', 'Open Sans']}})],1),_c('pre',[_vm._v(\"<McFontpicker :google-fonts=\\\"['Tinos', 'Open Sans']\\\" />\")]),_c('h3',{attrs:{\"id\":\"manuallyadd\"}},[_vm._v(\"Manually add fonts\")]),_vm._m(12),_c('p',[_vm._v(\" You need to provide your own styling of the previews, how to create this is again beyond the scope of this document for now. Local fonts are also not auto-loaded, so depending on use case you may need to handle that too. \")]),_c('div',{staticClass:\"example\"},[_c('McFontpicker',{attrs:{\"google-fonts\":['Tinos', 'Open Sans'],\"local-fonts\":[\n          {\n            name: 'BickleyScript',\n            variants: [\n              {\n                italic: false,\n                weight: 400,\n              },\n              '1,400' ],\n          } ]},model:{value:(_vm.manuallyAddFontValue),callback:function ($$v) {_vm.manuallyAddFontValue=$$v},expression:\"manuallyAddFontValue\"}})],1),(typeof _vm.manuallyAddFontValue == 'string')?_c('p',[_vm._v(\" Current value: \"),_c('span',{style:({\n          fontFamily: _vm.manuallyAddFontValue,\n        })},[_vm._v(\" \"+_vm._s(_vm.manuallyAddFontValue)+\" \")])]):_vm._e(),_c('pre',{pre:true},[_vm._v(\"<McFontpicker\\n  v-model=\\\"manuallyAddFontValue\\\"\\n  :google-fonts=\\\"['Tinos', 'Open Sans']\\\"\\n  :local-fonts=\\\"[\\n    {\\n      name: 'BickleyScript',\\n      variants: [{ italic: false, weight: 400, '1,400' }],\\n    },\\n  ]\\\"\\n/>\\nCurrent value:\\n<span\\n  :style=\\\"{\\n    fontFamily: manuallyAddFontValue,\\n  }\\\"\\n>\\n  {{ manuallyAddFontValue }}\\n</span>\")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" See \"),_c('a',{attrs:{\"href\":\"https://github.com/Mikk3lRo/vue-fontpicker#readme\"}},[_vm._v(\"github repo\")]),_vm._v(\" or \"),_c('a',{attrs:{\"href\":\"https://www.npmjs.com/package/@mikk3lro/mc-fontpicker\"}},[_vm._v(\"npm package\")]),_vm._v(\" for installation instructions. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"toc\"}},[_c('h3',[_vm._v(\"TOC\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"#default\"}},[_vm._v(\"Default behaviour\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#fontVariants\"}},[_vm._v(\"Font variants\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#nomatches\"}},[_vm._v(\"No matches\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#autoload\"}},[_vm._v(\"Autoload fonts\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#manualload\"}},[_vm._v(\"Manually load fonts\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#loadallvariants\"}},[_vm._v(\"Load all variants\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#loadspecific\"}},[_vm._v(\"Load specific variants\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#loaderonly\"}},[_vm._v(\"Font loader only\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#choosegooglefonts\"}},[_vm._v(\"Choose google fonts\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#manuallyadd\"}},[_vm._v(\"Manually add fonts\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" By default the fontpicker is \"),_c('strong',[_vm._v(\"only\")]),_vm._v(\" a picker. The selected font is not loaded. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" On mount and when a new font is selected the \"),_c('code',[_vm._v(\"fontVariants\")]),_vm._v(\" event is triggered. The main difference from the \"),_c('code',[_vm._v(\"input\")]),_vm._v(\" event is that it provides details about available variants of the current font. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" Customize the message when autocomplete yields no results using the \"),_c('code',[_vm._v(\"no-matches\")]),_vm._v(\"-prop. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Automatically load fonts by setting the \"),_c('code',[_vm._v(\"auto-load\")]),_vm._v(\"-prop.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Manually load fonts by setting the \"),_c('code',[_vm._v(\"load-fonts\")]),_vm._v(\"-prop.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" By default only the four most common variants (regular, bold, italic and bold italic) are loaded. You can make sure all variants are loaded by setting the \"),_c('code',[_vm._v(\"load-all-variants\")]),_vm._v(\" prop. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" The \"),_c('code',[_vm._v(\"load-fonts\")]),_vm._v(\"-prop can also accept an array of objects specifying fonts and variants. Example: \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" Note that many fonts exist only in a few variants, so make sure the variants you request actually exist. For instance by filtering the values emitted from \"),_c('code',[_vm._v(\"fontVariants\")]),_vm._v(\" events. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" Set the \"),_c('code',[_vm._v(\"loader-only\")]),_vm._v(\"-prop to completely hide the font picker if you just need to load one or more fonts. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" You can limit the included google fonts using the \"),_c('code',[_vm._v(\"google-fonts\")]),_vm._v(\"-prop. \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Manually add fonts using the \"),_c('code',[_vm._v(\"local-fonts\")]),_vm._v(\"-prop.\")])}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <h1>Simple google font picker</h1>\n    <p>\n      This is a live demo showing how to use @mikk3lro/mc-fontpicker for Vue.js.\n    </p>\n    <p>\n      See\n      <a href=\"https://github.com/Mikk3lRo/vue-fontpicker#readme\"\n        >github repo</a\n      >\n      or\n      <a href=\"https://www.npmjs.com/package/@mikk3lro/mc-fontpicker\"\n        >npm package</a\n      >\n      for installation instructions.\n    </p>\n\n    <div id=\"toc\">\n      <h3>TOC</h3>\n      <ul>\n        <li><a href=\"#default\">Default behaviour</a></li>\n        <li><a href=\"#fontVariants\">Font variants</a></li>\n        <li><a href=\"#nomatches\">No matches</a></li>\n        <li><a href=\"#autoload\">Autoload fonts</a></li>\n        <li><a href=\"#manualload\">Manually load fonts</a></li>\n        <li><a href=\"#loadallvariants\">Load all variants</a></li>\n        <li><a href=\"#loadspecific\">Load specific variants</a></li>\n        <li><a href=\"#loaderonly\">Font loader only</a></li>\n        <li><a href=\"#choosegooglefonts\">Choose google fonts</a></li>\n        <li><a href=\"#manuallyadd\">Manually add fonts</a></li>\n      </ul>\n    </div>\n\n    <h3 id=\"default\">Default behaviour</h3>\n    <p>\n      By default the fontpicker is <strong>only</strong> a picker. The selected\n      font is not loaded.\n    </p>\n    <div class=\"example\">\n      <McFontpicker v-model=\"font1\" />\n    </div>\n    <p>\n      Current value: <span :style=\"'font-family: ' + font1\">{{ font1 }}</span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker v-model=\"font1\" />\nCurrent value: &lt;span :style=\"'font-family: ' + font1\">{{ font1 }}&lt;/span>\n</pre\n    >\n\n    <h3 id=\"fontVariants\">Font variants</h3>\n    <p>\n      On mount and when a new font is selected the\n      <code>fontVariants</code> event is triggered. The main difference from the\n      <code>input</code> event is that it provides details about available\n      variants of the current font.\n    </p>\n    <div class=\"example\">\n      <McFontpicker\n        value=\"Oranienbaum\"\n        @fontVariants=\"i => (fontVariants = i)\"\n      />\n    </div>\n    <p>fontVariants:</p>\n    <pre>{{ fontVariants }}</pre>\n    <pre v-pre>\n&lt;McFontpicker @fontVariants=\"i => (fontVariants = i)\" />\nfontVariants: &lt;pre>{{ fontVariants }}&lt;/pre>\n</pre\n    >\n\n    <h3 id=\"nomatches\">No matches</h3>\n    <p>\n      Customize the message when autocomplete yields no results using the\n      <code>no-matches</code>-prop.\n    </p>\n    <div class=\"example\">\n      <McFontpicker ref=\"fontloader\" no-matches=\"I've got nothing\" />\n    </div>\n    <pre>&lt;McFontpicker no-matches=\"I've got nothing\" /></pre>\n\n    <h3 id=\"autoload\">Autoload fonts</h3>\n    <p>Automatically load fonts by setting the <code>auto-load</code>-prop.</p>\n    <div class=\"example\">\n      <McFontpicker auto-load v-model=\"font2\" />\n    </div>\n    <p>\n      Current value: <span :style=\"'font-family: ' + font2\">{{ font2 }}</span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker auto-load v-model=\"font2\" />\nCurrent value: &lt;span :style=\"'font-family: ' + font2\">{{ font2 }}&lt;/span>\n</pre\n    >\n\n    <h3 id=\"manualload\">Manually load fonts</h3>\n    <p>Manually load fonts by setting the <code>load-fonts</code>-prop.</p>\n    <p>Several fonts may be loaded by comma-separating the names.</p>\n    <div class=\"example\">\n      <McFontpicker :load-fonts=\"manuallyLoadFonts1\" />\n      <div style=\"text-align: center\">\n        <button @click=\"manuallyLoadFonts1 = 'Rubik Beastly'\">\n          Load <span style=\"font-family: Rubik Beastly\">\"Rubik Beastly\"</span>\n        </button>\n        <button @click=\"manuallyLoadFonts1 = 'Pacifico, Teko'\">\n          Load <span style=\"font-family: Pacifico\">\"Pacifico\"</span> and\n          <span style=\"font-family: Teko\">\"Teko\"</span>\n        </button>\n      </div>\n    </div>\n    <pre>\n&lt;McFontpicker :load-fonts=\"manuallyLoadFonts1\" />\n&lt;button @click=\"manuallyLoadFonts1 = 'Rubik Beastly'\">One font&lt;/button>\n&lt;button @click=\"manuallyLoadFonts1 = 'Pacifico, Teko'\">Two fonts&lt;/button>\n</pre\n    >\n\n    <h3 id=\"loadallvariants\">Load all variants</h3>\n    <p>\n      By default only the four most common variants (regular, bold, italic and\n      bold italic) are loaded. You can make sure all variants are loaded by\n      setting the <code>load-all-variants</code> prop.\n    </p>\n    <div class=\"example\">\n      <McFontpicker auto-load load-all-variants v-model=\"font3\" />\n    </div>\n    <p>\n      Current value: <span :style=\"'font-family: ' + font3\">{{ font3 }}</span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker auto-load load-all-variants v-model=\"font3\" />\nCurrent value: &lt;span :style=\"'font-family: ' + font3\">{{ font3 }}&lt;/span>\n</pre\n    >\n\n    <h3 id=\"loadspecific\">Load specific variants</h3>\n    <p>\n      The <code>load-fonts</code>-prop can also accept an array of objects\n      specifying fonts and variants. Example:\n    </p>\n    <pre>\n[\n  {\n    font: \"Open Sans\",\n    variants: [\n      { italic: false, weight: 400 },\n      { italic: true, weight: 400 },\n      { italic: false, weight: 700 },\n      { italic: true, weight: 700 },\n    ]\n  },\n  {\n    font: \"Rancho\",\n    variants: [\n      { italic: false, weight: 400 },\n    ]\n  }\n]</pre\n    >\n    <p>\n      Note that many fonts exist only in a few variants, so make sure the\n      variants you request actually exist. For instance by filtering the values\n      emitted from <code>fontVariants</code> events.\n    </p>\n    <p>\n      One use case could be loading only one variant - in this example whichever\n      is first (least bold):\n    </p>\n    <div class=\"example\">\n      <McFontpicker\n        :load-fonts=\"[thinnestFont]\"\n        @fontVariants=\"\n          v =>\n            (thinnestFont = {\n              font: v.font,\n              variants: v.variants.slice(0, 1),\n            })\n        \"\n      />\n    </div>\n    <p v-if=\"typeof thinnestFont == 'object'\">\n      Current value:\n      <span\n        :style=\"{\n          fontFamily: thinnestFont.font,\n          fontWeight: thinnestFont.variants[0].weight,\n        }\"\n      >\n        {{ thinnestFont.font }}\n      </span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker\n  :load-fonts=\"[thinnestFont]\"\n  @fontVariants=\"\n    v => (thinnestFont = {\n      font: v.font,\n      variants: v.variants.slice(0, 1),\n    })\n  \"\n/>\nCurrent value:\n&lt;span\n  :style=\"{\n    fontFamily: thinnestFont.font,\n    fontWeight: thinnestFont.variants[0].weight,\n  }\"\n>\n  {{ thinnestFont.font }}\n&lt;/span>\n</pre\n    >\n\n    <h3 id=\"loaderonly\">Font loader only</h3>\n    <p>\n      Set the <code>loader-only</code>-prop to completely hide the font picker\n      if you just need to load one or more fonts.\n    </p>\n    <div class=\"example\">\n      <McFontpicker :load-fonts=\"manuallyLoadFonts2\" loader-only />\n      <div style=\"text-align: center\">\n        <button @click=\"manuallyLoadFonts1 = 'Rancho'\">\n          Load <span style=\"font-family: Rancho\">\"Rancho\"</span>\n        </button>\n        <button @click=\"manuallyLoadFonts1 = 'Smooch, Risque'\">\n          Load <span style=\"font-family: Smooch\">\"Smooch\"</span> and\n          <span style=\"font-family: Risque\">\"Risque\"</span>\n        </button>\n      </div>\n    </div>\n    <pre>\n&lt;McFontpicker :load-fonts=\"manuallyLoadFonts2\" loader-only />\n&lt;button @click=\"manuallyLoadFonts2 = 'Rancho'\">Rancho&lt;/button>\n&lt;button @click=\"manuallyLoadFonts2 = 'Smooch, Risque'\">Two fonts&lt;/button>\n</pre\n    >\n\n    <h3 id=\"choosegooglefonts\">Choose google fonts</h3>\n    <p>\n      You can limit the included google fonts using the\n      <code>google-fonts</code>-prop.\n    </p>\n    <p>You can supply font names as an array or as a comma-seperated string.</p>\n    <p>\n      Do note that the previews are crazy inefficient if you only use a few\n      fonts - in that case you are probably better off recompiling all previews\n      - which is beyond the scope of this document at the moment.\n    </p>\n    <div class=\"example\">\n      <McFontpicker :google-fonts=\"['Tinos', 'Open Sans']\" />\n    </div>\n    <pre>&lt;McFontpicker :google-fonts=\"['Tinos', 'Open Sans']\" /></pre>\n\n    <h3 id=\"manuallyadd\">Manually add fonts</h3>\n    <p>Manually add fonts using the <code>local-fonts</code>-prop.</p>\n    <p>\n      You need to provide your own styling of the previews, how to create this\n      is again beyond the scope of this document for now. Local fonts are also\n      not auto-loaded, so depending on use case you may need to handle that too.\n    </p>\n    <div class=\"example\">\n      <McFontpicker\n        v-model=\"manuallyAddFontValue\"\n        :google-fonts=\"['Tinos', 'Open Sans']\"\n        :local-fonts=\"[\n          {\n            name: 'BickleyScript',\n            variants: [\n              {\n                italic: false,\n                weight: 400,\n              },\n              '1,400',\n            ],\n          },\n        ]\"\n      />\n    </div>\n    <p v-if=\"typeof manuallyAddFontValue == 'string'\">\n      Current value:\n      <span\n        :style=\"{\n          fontFamily: manuallyAddFontValue,\n        }\"\n      >\n        {{ manuallyAddFontValue }}\n      </span>\n    </p>\n    <pre v-pre>\n&lt;McFontpicker\n  v-model=\"manuallyAddFontValue\"\n  :google-fonts=\"['Tinos', 'Open Sans']\"\n  :local-fonts=\"[\n    {\n      name: 'BickleyScript',\n      variants: [{ italic: false, weight: 400, '1,400' }],\n    },\n  ]\"\n/>\nCurrent value:\n&lt;span\n  :style=\"{\n    fontFamily: manuallyAddFontValue,\n  }\"\n>\n  {{ manuallyAddFontValue }}\n&lt;/span></pre\n    >\n  </div>\n</template>\n\n<script>\nimport McFontpicker from './components/index'\nimport '../manual-fonts-test/font-previews.css'\n\nexport default {\n  name: 'App',\n  components: {\n    McFontpicker,\n  },\n  data() {\n    return {\n      font1: 'Tenor Sans',\n      font2: 'Open Sans',\n      font3: 'Open Sans',\n      fontVariants: null,\n      manuallyLoadFonts1: '',\n      manuallyLoadFonts2: '',\n      thinnestFont: '',\n      manuallyAddFontValue: 'Tinos',\n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin: 1em auto 160px auto;\n  max-width: 600px;\n  text-align: left;\n  padding: 1em 0.5em;\n  line-height: 1.6em;\n}\n* {\n  vertical-align: baseline;\n  box-sizing: border-box;\n}\nbutton {\n  height: 3em;\n  line-height: 1em;\n  padding: 0.5em 1em;\n  box-sizing: border-box;\n  margin: 0.5em;\n  width: 20em;\n}\na {\n  color: #379bff;\n  text-decoration: none;\n}\na:hover {\n  text-decoration: underline;\n}\n#toc {\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.3);\n  position: fixed;\n  width: 220px;\n  top: 40px;\n  left: calc(50% - 550px);\n  padding: 1em 0;\n}\n#toc li {\n  padding: 0.2em 0.5em;\n  margin: 0;\n  text-align: center;\n}\n#toc h3 {\n  border-bottom: 1px solid #888;\n  margin: 0 0 0.5em 0;\n  text-align: center;\n}\n#toc ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n@media screen and (max-width: 1100px) {\n  #app {\n    margin-left: 230px;\n    max-width: none;\n  }\n  #toc {\n    left: 0;\n    top: 0;\n    bottom: 0;\n    transform: none;\n  }\n}\n@media screen and (max-width: 600px) {\n  #app {\n    margin-left: auto;\n  }\n  #toc {\n    display: none;\n  }\n}\n\nh3 {\n  margin-top: 50px;\n  border-bottom: 3px solid #123456;\n}\n\nli {\n  margin: 1em 0;\n}\n\n.example {\n  text-align: center;\n  position: relative;\n}\n.example.overflow {\n  overflow: scroll;\n  padding: 1em 0;\n  border: 1px solid;\n}\npre,\ncode {\n  text-align: left;\n  background: #eee;\n}\ntable {\n  margin: 0 auto;\n  vertical-align: top;\n  table-layout: fixed;\n}\ntable th,\ntable td {\n  vertical-align: top;\n  padding: 0.5em;\n  width: 45%;\n}\ntable td:nth-child(2) {\n  width: 10%;\n  text-align: center;\n}\ntable th {\n  text-align: right;\n  font-weight: normal;\n}\ntable td {\n  text-align: left;\n}\ntable code {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\ntable pre,\ntable code {\n  margin-top: 3px;\n  display: inline-block;\n  max-width: 100%;\n}\n.squarePreview {\n  width: 100px;\n  height: 2em;\n}\n.inputPreview {\n  border: none;\n  padding: 0;\n  border-radius: 1em;\n  height: 2em;\n  text-align: center;\n  width: 100px;\n}\npre {\n  padding: 0.5em;\n  overflow-x: auto;\n}\n.initial-current {\n  width: 100%;\n}\n.initial-current pre {\n  width: 100%;\n  margin: 0;\n}\n@media screen and (max-width: 500px) {\n  .initial-current thead {\n    display: none;\n  }\n  .initial-current th,\n  .initial-current td,\n  .initial-current tr {\n    width: auto !important;\n    display: block;\n    text-align: center;\n  }\n  .initial-current th:first-child::before {\n    content: 'Initial: ';\n    display: block;\n  }\n  .initial-current td:last-child::before {\n    content: 'Current: ';\n    display: block;\n  }\n  .initial-current td:last-child {\n    border-bottom: 1px solid #333;\n  }\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=01d6b17f&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.loaderOnly)?_c('div',{class:_vm.outerClasses},[_c('input',{ref:\"input\",staticClass:\"mcfontpicker__search\",attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.searchContent},on:{\"input\":_vm.searchChanged,\"focus\":_vm.onFocus,\"blur\":_vm.hide,\"keydown\":_vm.onKeyDown}}),_c('div',{ref:\"preview\",class:_vm.previewClasses}),_c('div',{ref:\"popout\",class:_vm.popoutClasses,attrs:{\"tabindex\":\"-1\"},on:{\"mousedown\":_vm.cancelBlur}},[_vm._l((_vm.matchingFonts),function(font,i){return _c('div',{key:font.sane,class:'mcfontpicker__option' + (i == _vm.selectedFontIndex ? ' selected' : ''),on:{\"mousedown\":function (e) { return _vm.onClick(font); },\"mousemove\":function () { return (_vm.selectedFontIndex = i); }}},[_c('div',{class:'font-preview-' + font.sane})])}),(_vm.matchingFonts.length == 0)?_c('div',{staticClass:\"mcfontpicker__nomatches\"},[_vm._v(\" \"+_vm._s(_vm.noMatches)+\" \")]):_vm._e()],2)]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :class=\"outerClasses\" v-if=\"!loaderOnly\">\n    <input\n      ref=\"input\"\n      type=\"text\"\n      @input=\"searchChanged\"\n      @focus=\"onFocus\"\n      @blur=\"hide\"\n      @keydown=\"onKeyDown\"\n      class=\"mcfontpicker__search\"\n      :value=\"searchContent\"\n    />\n    <div ref=\"preview\" :class=\"previewClasses\"></div>\n    <div\n      ref=\"popout\"\n      tabindex=\"-1\"\n      :class=\"popoutClasses\"\n      @mousedown=\"cancelBlur\"\n    >\n      <div\n        :class=\"\n          'mcfontpicker__option' + (i == selectedFontIndex ? ' selected' : '')\n        \"\n        v-for=\"(font, i) in matchingFonts\"\n        v-bind:key=\"font.sane\"\n        @mousedown=\"e => onClick(font)\"\n        @mousemove=\"() => (selectedFontIndex = i)\"\n      >\n        <div :class=\"'font-preview-' + font.sane\" />\n      </div>\n      <div v-if=\"matchingFonts.length == 0\" class=\"mcfontpicker__nomatches\">\n        {{ noMatches }}\n      </div>\n    </div>\n    <!--pre>{{ focused }}</pre-->\n  </div>\n</template>\n\n<script>\nimport fonts from '../../font-preview/fontInfo.json'\nimport '../../font-preview/font-previews.css'\n\nexport default {\n  props: {\n    value: {\n      type: [String],\n      default: 'Open Sans',\n    },\n    noMatches: {\n      type: [String],\n      default: 'No matches',\n    },\n    autoLoad: {\n      type: Boolean,\n      default: false,\n    },\n    loaderOnly: {\n      type: Boolean,\n      default: false,\n    },\n    loadAllVariants: {\n      type: Boolean,\n      default: false,\n    },\n    loadFonts: {\n      type: [Array, String],\n      default: '',\n    },\n    googleFonts: {\n      type: [Array, String],\n      default: () => 'all',\n    },\n    localFonts: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      focused: false,\n      allGoogleFonts: [],\n      typedSearch: '',\n      searchContent: '',\n      selectedFontIndex: -1,\n      current: {\n        name: 'Open Sans',\n        sane: 'open-sans',\n      },\n    }\n  },\n  watch: {\n    value(newValue) {\n      this.handleNewValue(newValue)\n    },\n    loadFonts(newValue) {\n      this.handleLoadFont()\n    },\n  },\n  computed: {\n    outerClasses() {\n      let ret = [\n        'mcfontpicker', //\n      ]\n      return ret\n    },\n    popoutClasses() {\n      let ret = ['mcfontpicker__popout']\n      if (this.focused) {\n        ret.push('mcfontpicker__active')\n      }\n      return ret\n    },\n    previewClasses() {\n      let ret = ['mcfontpicker__preview']\n      ret.push('font-preview-' + this.current.sane)\n      return ret\n    },\n    fonts() {\n      let activeFonts\n\n      if (this.googleFonts == 'all') {\n        activeFonts = [...this.allGoogleFonts]\n      } else if (typeof this.googleFonts === 'string') {\n        let fontNames = this.googleFonts.split(',').map(v => v.toLowerCase())\n        activeFonts = [...this.allGoogleFonts.filter(a => fontNames.includes(a.cased))]\n      } else {\n        let fontNames = this.googleFonts.map(v => v.toLowerCase())\n        activeFonts = [...this.allGoogleFonts.filter(a => fontNames.includes(a.cased))]\n      }\n\n      for (var i in this.localFonts) {\n        activeFonts.push({\n          name: this.localFonts[i].name,\n          cased: this.localFonts[i].name.toLowerCase(),\n          sane: this.localFonts[i].name\n            .replaceAll(' ', '_')\n            .replaceAll(/[^a-zA-Z0-9-]/g, '')\n            .toLowerCase(),\n          variants: this.localFonts[i].variants.map(v => {\n            if (typeof v === 'string') {\n              return v\n            }\n            return (v.italic ? '1' : '0') + ',' + v.weight\n          }),\n        })\n      }\n      return activeFonts\n    },\n    matchingFonts() {\n      let search = this.typedSearch.toLowerCase().trim()\n      return this.fonts.filter(a => a.cased.includes(search))\n    },\n  },\n  mounted() {\n    let ifonts = []\n    for (var i in fonts) {\n      let font = fonts[i]\n      font.cased = font.name.toLowerCase()\n      ifonts.push(font)\n    }\n    this.allGoogleFonts = ifonts\n    this.handleNewValue(this.value)\n\n    this.handleLoadFont()\n  },\n  methods: {\n    cancelBlur(e) {\n      e.preventDefault()\n    },\n    handleNewValue(newValue) {\n      this.setCurrentByName(newValue)\n      this.typedSearch = this.searchContent = newValue\n    },\n    handleLoadFont() {\n      if (typeof this.loadFonts === 'string') {\n        let fontNames = this.loadFonts.split(',')\n        for (var i in fontNames) {\n          this.loadFontByName(fontNames[i])\n        }\n      } else {\n        for (i in this.loadFonts) {\n          let font = this.loadFonts[i]\n          if (!font.font) {\n            continue\n          }\n          if (font.variants) {\n            this.loadFontByName(\n              font.font,\n              font.variants.map(v => (v.italic ? '1' : '0') + ',' + v.weight),\n            )\n          } else {\n            this.loadFontByName(font.font)\n          }\n        }\n      }\n    },\n    searchChanged(e) {\n      this.$refs['popout'].scrollTop = 0\n      this.selectedFontIndex = -1\n      let isLonger = this.typedSearch.length < e.target.value.length\n      this.typedSearch = e.target.value\n\n      if (!isLonger) {\n        //Don't autocomplete when using backspace\n        this.searchContent = e.target.value\n        return\n      }\n\n      let cased = this.typedSearch.toLowerCase()\n\n      let matches = this.fonts.filter(a => a.cased.startsWith(cased))\n      if (matches.length) {\n        let firstMatch = matches[0].name\n        this.searchContent = firstMatch\n        e.target.value = firstMatch\n        this.setInputSelection(\n          e.target,\n          this.typedSearch.length,\n          this.searchContent.length,\n        )\n      } else {\n        this.searchContent = e.target.value\n      }\n    },\n    setInputSelection(input, startPos, endPos) {\n      if (input.setSelectionRange) {\n        input.setSelectionRange(startPos, endPos)\n      } else if (input.createTextRange) {\n        var range = input.createTextRange()\n        range.collapse(true)\n        range.moveEnd('character', endPos)\n        range.moveStart('character', startPos)\n        range.select()\n      }\n    },\n\n    onKeyDown(e) {\n      if (e.key && e.key === 'Enter') {\n        let cased = this.searchContent.toLowerCase()\n        let preciseMatches = this.fonts.filter(a => a.cased == cased)\n        if (this.selectedFontIndex > -1) {\n          this.setCurrent(this.matchingFonts[this.selectedFontIndex])\n        } else if (preciseMatches.length == 1) {\n          this.setCurrent(preciseMatches[0])\n        } else if (this.matchingFonts.length > 0) {\n          this.setCurrent(this.matchingFonts[0])\n        } else {\n          this.setCurrent(this.current)\n        }\n      } else if (e.key && e.key === 'ArrowDown') {\n        e.preventDefault()\n        if (this.selectedFontIndex < this.matchingFonts.length - 1) {\n          this.searchContent = this.typedSearch\n          this.selectedFontIndex++\n          this.showSelectedFont()\n        }\n      } else if (e.key && e.key === 'ArrowUp') {\n        e.preventDefault()\n        if (this.selectedFontIndex > 0) {\n          this.searchContent = this.typedSearch\n          this.selectedFontIndex--\n          this.showSelectedFont()\n        }\n      }\n    },\n\n    showSelectedFont(why = 'key') {\n      let selectedFont = this.matchingFonts[this.selectedFontIndex]\n      let font = this.$refs['popout'].querySelector(\n        '.font-preview-' + selectedFont.sane,\n      )\n      if (font) {\n        let fontTop = font.offsetTop\n        let fontBottom = fontTop + font.offsetHeight\n        let popTop = this.$refs['popout'].scrollTop\n        let popBottom = popTop + this.$refs['popout'].clientHeight\n        if (why == 'opening' || fontTop <= popTop) {\n          this.$refs['popout'].scrollTop = fontTop\n        } else if (fontBottom >= popBottom) {\n          this.$refs['popout'].scrollTop =\n            fontBottom - this.$refs['popout'].clientHeight - 1\n        }\n      }\n    },\n\n    onFocus() {\n      this.$refs['input'].select()\n      this.typedSearch = ''\n      this.show()\n    },\n    onClick(font) {\n      this.setCurrent(font)\n      this.hide()\n    },\n    show() {\n      this.focused = true\n      setTimeout(() => {\n        for (var i in this.matchingFonts) {\n          if (this.matchingFonts[i].name == this.current.name) {\n            this.selectedFontIndex = i\n            break\n          }\n        }\n        this.searchContent = this.current.name\n        this.showSelectedFont('opening')\n      }, 1)\n    },\n    hide() {\n      this.focused = false\n    },\n    getFontByName(name) {\n      for (var i in this.fonts) {\n        if (this.fonts[i].name == name.trim()) {\n          return this.fonts[i]\n        }\n      }\n      return null\n    },\n    setCurrent(newValue) {\n      this.current = newValue\n      this.typedSearch = this.searchContent = this.current.name\n      this.$emit('input', this.current.name)\n      this.$refs['input'].blur()\n      this.autoLoadFont()\n      this.emitFontVariants()\n    },\n    setCurrentByName(newName) {\n      let font = this.getFontByName(newName)\n      if (font) {\n        this.current = font\n        this.autoLoadFont()\n        this.emitFontVariants()\n      }\n    },\n    emitFontVariants() {\n      this.$emit('fontVariants', {\n        font: this.current.name,\n        variants: this.current.variants.map(v => {\n          return {\n            italic: v.substring(0, 2) == '1,',\n            weight: v.substring(2),\n          }\n        }),\n      })\n    },\n    autoLoadFont(font) {\n      if (this.autoLoad) {\n        this.loadFontFromObject(this.current)\n      }\n    },\n    loadFontByName(font, variants) {\n      if (font === '') {\n        return\n      }\n      let origFont = font\n      if (typeof font == 'string') {\n        font = this.getFontByName(font)\n      }\n      if (\n        font == null ||\n        typeof font != 'object' ||\n        typeof font.sane != 'string'\n      ) {\n        console.error('Unknown font', origFont)\n      } else if (font.variants.length < 1) {\n        console.error('No valid variants of font', variants)\n      } else {\n        this.loadFontFromObject(font, variants)\n      }\n    },\n    getFourVariants(variants) {\n      let regularWeights = variants\n        .filter(v => v.substring(0, 2) == '0,')\n        .map(v => parseInt(v.substring(2)))\n        .sort((a, b) => a - b)\n      let italicWeights = variants\n        .filter(v => v.substring(0, 2) == '1,')\n        .map(v => parseInt(v.substring(2)))\n        .sort((a, b) => a - b)\n\n      let fourFonts = {}\n\n      // Best regular font is whatever is closest to 400 (but use 300 if only 300 and 500 available)\n      fourFonts.regular = regularWeights\n        .sort((a, b) => Math.abs(399 - a) - Math.abs(399 - b))\n        .shift()\n\n      // Best bold font is whatever is larger than regular, and closest to 700\n      fourFonts.bold = regularWeights\n        .filter(v => v > fourFonts.regular)\n        .sort((a, b) => Math.abs(700 - a) - Math.abs(700 - b))\n        .shift()\n\n      // Same for italics\n      fourFonts.italic = italicWeights\n        .sort((a, b) => Math.abs(399 - a) - Math.abs(399 - b))\n        .shift()\n      fourFonts.boldItalic = italicWeights\n        .filter(v => v > fourFonts.italic)\n        .sort((a, b) => Math.abs(700 - a) - Math.abs(700 - b))\n        .shift()\n\n      let loadFonts = []\n      if (fourFonts.regular) {\n        loadFonts.push('0,' + fourFonts.regular)\n      }\n      if (fourFonts.bold) {\n        loadFonts.push('0,' + fourFonts.bold)\n      }\n      if (fourFonts.italic) {\n        loadFonts.push('1,' + fourFonts.italic)\n      }\n      if (fourFonts.boldItalic) {\n        loadFonts.push('1,' + fourFonts.boldItalic)\n      }\n      return loadFonts\n    },\n    loadFontFromObject(font, variants) {\n      if (variants) {\n        variants = font.variants.filter(v => variants.includes(v))\n      } else if (this.loadAllVariants) {\n        variants = font.variants\n      } else {\n        variants = this.getFourVariants(font.variants)\n      }\n\n      let cssId = 'google-font-' + font.sane\n      let cssIdAll = cssId + '-all'\n      if (variants.length == font.variants.length) {\n        cssId = cssIdAll\n      } else {\n        cssId +=\n          '-' +\n          variants\n            .sort()\n            .join('-')\n            .replaceAll('1,', 'i')\n            .replaceAll('0,', '')\n      }\n\n      let existing = document.getElementById(cssId)\n      let existingAll = document.getElementById(cssIdAll)\n      if (!existing && !existingAll) {\n        var link = document.createElement('link')\n        link.rel = 'stylesheet'\n        link.id = cssId\n        link.href =\n          'https://fonts.googleapis.com/css2?family=' +\n          font.name +\n          ':ital,wght@' +\n          variants.sort().join(';') +\n          '&display=swap'\n        document.getElementsByTagName('head')[0].appendChild(link)\n      }\n    },\n  },\n}\n</script>\n\n<style>\n.mcfontpicker,\n.mcfontpicker * {\n  box-sizing: border-box;\n}\n.mcfontpicker {\n  border: 1px solid;\n  display: block;\n  position: relative;\n}\n.mcfontpicker__search {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  padding: 0 10px;\n  cursor: pointer;\n  font-size: 16px;\n}\n.mcfontpicker__search:focus {\n  cursor: text;\n  opacity: 1;\n}\n.mcfontpicker__popout {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  border: 1px solid;\n  max-height: calc(12em + 1px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 2;\n  background: #fff;\n  opacity: 0;\n  transform: scaleY(0.001);\n}\n.mcfontpicker__popout.mcfontpicker__active {\n  opacity: 1;\n  transform: scale(1);\n}\n.mcfontpicker__popout .mcfontpicker__option {\n  background: #fff;\n}\n.mcfontpicker__popout .mcfontpicker__option.selected {\n  background: #6789ab;\n}\n.mcfontpicker__nomatches {\n  height: 2em;\n  line-height: 2em;\n  background: #fff;\n  text-align: center;\n  color: #888;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./McFontpicker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./McFontpicker.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./McFontpicker.vue?vue&type=template&id=16f86e82&\"\nimport script from \"./McFontpicker.vue?vue&type=script&lang=js&\"\nexport * from \"./McFontpicker.vue?vue&type=script&lang=js&\"\nimport style0 from \"./McFontpicker.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./McFontpicker.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}